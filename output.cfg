NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 7 
NUMBER OF USED VARIABLES : 24 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 17 
	1.  	MOVA R4 L3 
	2.  	ADDI R5 R0 #1 
	3.  	ADD (R4) R0 R5 
	4.  	MOVA R6 L3 
	5.  	ADDI R6 R6 #1 
	6.  	ADDI R7 R0 #4 
	7.  	ADD (R6) R0 R7 
	8.  	MOVA R8 L3 
	9.  	ADDI R8 R8 #2 
	10.  	ADDI R9 R0 #5 
	11.  	ADD (R8) R0 R9 
	12.  	MOVA R10 L3 
	13.  	ADDI R10 R10 #3 
	14.  	ADDI R11 R0 #6 
	15.  	ADD (R10) R0 R11 
	16.  	ADDI R3 R0 #0 
	17.  	ADDI R12 R0 #2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L5	ANDB R12 R12 R12 
	2.  	BLT L4 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 14 
	1.  	MOVA R13 L3 
	2.  	ADD R13 R13 R12 
	3.  	ADD R14 R0 (R13) 
	4.  	ADDI R12 R12 #1 
	5.  	MOVA R15 L3 
	6.  	ADD R15 R15 R12 
	7.  	ADD R16 R0 (R15) 
	8.  	SUBI R12 R12 #2 
	9.  	ADDI R1 R14 #0 
	10.  	ADDI R2 R16 #0 
	11.  	MULI R17 R2 #2 
	12.  	ADD R18 R1 R17 
	13.  	ADD R3 R3 R18 
	14.  	BT L5 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  L4	WRITE R3 0 
	2.  	ADDI R3 R0 #0 
	3.  	ADDI R19 R0 #2 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L7	ANDB R19 R19 R19 
	2.  	BLT L6 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 12 
	1.  	MOVA R20 L3 
	2.  	ADD R20 R20 R19 
	3.  	ADD R21 R0 (R20) 
	4.  	ADDI R19 R19 #1 
	5.  	MOVA R22 L3 
	6.  	ADD R22 R22 R19 
	7.  	ADD R23 R0 (R22) 
	8.  	SUBI R19 R19 #2 
	9.  	ADDI R1 R21 #0 
	10.  	ADDI R2 R23 #0 
	11.  	ADDI R3 R3 #5 
	12.  	BT L7 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L6	WRITE R3 0 
	2.  	HALT 
**************************


