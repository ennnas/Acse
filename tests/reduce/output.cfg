NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 5 
NUMBER OF USED VARIABLES : 16 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 15 
	1.  	ADDI R3 R0 #0 
	2.  	READ R2 0 
	3.  	MOVA R4 L0 
	4.  	ADDI R5 R0 #2 
	5.  	ADD (R4) R0 R5 
	6.  	MOVA R6 L0 
	7.  	ADDI R6 R6 #1 
	8.  	ADDI R7 R0 #6 
	9.  	ADD (R6) R0 R7 
	10.  	MOVA R8 L0 
	11.  	ADDI R8 R8 #2 
	12.  	ADDI R9 R0 #13 
	13.  	ADD (R8) R0 R9 
	14.  	ADDI R10 R0 #0 
	15.  	BT L4 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 4 
	1.  L6	MUL R11 R2 R1 
	2.  	ADD R12 R3 R11 
	3.  	ADDI R3 R12 #0 
	4.  	ADDI R10 R10 #1 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L4	SUBI R13 R10 #3 
	2.  	BEQ L5 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R14 L0 
	2.  	ADD R14 R14 R10 
	3.  	ADD R15 R0 (R14) 
	4.  	ADDI R1 R15 #0 
	5.  	BT L6 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L5	WRITE R3 0 
	2.  	HALT 
**************************


