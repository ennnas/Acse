NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 12 
NUMBER OF USED VARIABLES : 12 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  	MUL R3 R1 R2 
	2.  	ADDI R5 R0 #0 
	3.  	ADD R4 R0 R1 
	4.  	BGT L3 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	SUB R4 R0 R4 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 3 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 1 
	1.  L3	BEQ L4 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADD R5 R5 R2 
	2.  	SUBI R4 R4 #1 
	3.  	BT L3 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L4	SUB R6 R3 R5 
	2.  	SEQ R6 0 
	3.  	ANDB R6 R6 R6 
	4.  	BEQ L2 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADDI R7 R0 #1 
	2.  	WRITE R7 0 
	3.  	BT L5 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L2	ADDI R8 R0 #0 
	2.  	WRITE R8 0 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L5	SUB R9 R0 R2 
	2.  	ADDI R11 R0 #0 
	3.  	ADD R10 R0 R1 
	4.  	BGT L6 
--------------------------
[BLOCK 9] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	SUB R10 R0 R10 
--------------------------
[BLOCK 10] 
NUMBER OF PREDECESSORS : 3 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 1 
	1.  L6	BEQ L7 
--------------------------
[BLOCK 11] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADD R11 R11 R9 
	2.  	SUBI R10 R10 #1 
	3.  	BT L6 
--------------------------
[BLOCK 12] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L7	WRITE R11 0 
	2.  	HALT 
**************************


