NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 8 
NUMBER OF USED VARIABLES : 13 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.  	ADDI R1 R0 #1 
	2.  	ADDI R2 R0 #6 
	3.  	ADDI R3 R0 #3 
	4.  	SUBI R4 R3 #0 
	5.  	SGT R4 0 
	6.  	BEQ L2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  	ADDI R5 R0 #2 
	2.  	WRITE R5 0 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L2	ADDI R6 R0 #3 
	2.  	SUBI R7 R6 #0 
	3.  	SGT R7 0 
	4.  	BEQ L4 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.  	WRITE R2 0 
	2.  	ADD R8 R1 R2 
	3.  	SUBI R9 R8 #7 
	4.  	SEQ R9 0 
	5.  	ANDB R9 R9 R9 
	6.  	BEQ L4 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  	ADDI R10 R2 #1 
	2.  	ADD R2 R0 R10 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 3 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.  L4	ADD R4 R4 R7 
	2.  	SUBI R11 R2 #0 
	3.  	SLT R11 0 
	4.  	SUBI R12 R11 #0 
	5.  	SGT R12 0 
	6.  	BEQ L5 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	NOP 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 4 
	1.  L5	ADD R4 R4 R12 
	2.  	ADD R1 R4 R0 
	3.  	WRITE R1 0 
	4.  	HALT 
**************************


