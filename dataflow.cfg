NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 1 
NUMBER OF USED VARIABLES : 8 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 12 
	1.  	READ R1 0 
			DEF = [R1]
			LIVE IN = []
			LIVE OUT = [R1]
	2.  	READ R2 0 
			DEF = [R2]
			LIVE IN = [R1]
			LIVE OUT = [R2, R1]
	3.  	ADDI R6 R1 #7 
			DEF = [R6]
			USES = [R1]
			LIVE IN = [R2, R1]
			LIVE OUT = [R6, R2, R1]
	4.  	STORE R1 L0 
			USES = [R1]
			LIVE IN = [R6, R2, R1]
			LIVE OUT = [R6, R2]
	5.  	DIV R8 R6 R2 
			DEF = [R8]
			USES = [R6, R2]
			LIVE IN = [R6, R2]
			LIVE OUT = [R6, R2, R8]
	6.  	MUL R9 R2 R8 
			DEF = [R9]
			USES = [R2, R8]
			LIVE IN = [R6, R2, R8]
			LIVE OUT = [R6, R9, R2]
	7.  	STORE R2 L1 
			USES = [R2]
			LIVE IN = [R6, R9, R2]
			LIVE OUT = [R6, R9]
	8.  	SUB R10 R6 R9 
			DEF = [R10]
			USES = [R6, R9]
			LIVE IN = [R6, R9]
			LIVE OUT = [R10]
	9.  	ADD R3 R0 R10 
			DEF = [R3]
			USES = [R0, R10]
			LIVE IN = [R10]
			LIVE OUT = [R3]
	10.  	WRITE R3 0 
			USES = [R3]
			LIVE IN = [R3]
			LIVE OUT = [R3]
	11.  	STORE R3 L2 
			USES = [R3]
			LIVE IN = [R3]
			LIVE OUT = []
	12.  	HALT 
			LIVE IN = []
			LIVE OUT = []
**************************


